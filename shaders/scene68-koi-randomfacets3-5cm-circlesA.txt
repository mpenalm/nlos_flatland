#include "trace-frag"

#include "bsdf"
#include "intersect"

void intersect(Ray ray, inout Intersection isect) {
    bboxIntersect(ray, vec2(0.0), vec2(1.79, 1.0), 5.0, isect);
    lineIntersect(ray, vec2(1.2, -1.0), vec2(1.2, -0.2), 1.0, isect);

    // First hidden wall
lineIntersect(ray, vec2(0.38898, 0.09807), vec2(0.41102, 0.12526), 0.0, isect);
lineIntersect(ray, vec2(0.39401, 0.11856), vec2(0.40599, 0.15144), 0.0, isect);
lineIntersect(ray, vec2(0.40376, 0.14124), vec2(0.39624, 0.17543), 0.0, isect);
lineIntersect(ray, vec2(0.39991, 0.16417), vec2(0.40009, 0.19917), 0.0, isect);
lineIntersect(ray, vec2(0.38535, 0.19542), vec2(0.41465, 0.21458), 0.0, isect);
lineIntersect(ray, vec2(0.40767, 0.21260), vec2(0.39233, 0.24406), 0.0, isect);
lineIntersect(ray, vec2(0.38513, 0.24245), vec2(0.41487, 0.26089), 0.0, isect);
lineIntersect(ray, vec2(0.41463, 0.26540), vec2(0.38537, 0.28460), 0.0, isect);
lineIntersect(ray, vec2(0.38523, 0.28895), vec2(0.41477, 0.30772), 0.0, isect);
lineIntersect(ray, vec2(0.40518, 0.30495), vec2(0.39482, 0.33838), 0.0, isect);
lineIntersect(ray, vec2(0.41333, 0.33366), vec2(0.38667, 0.35634), 0.0, isect);
lineIntersect(ray, vec2(0.41318, 0.35682), vec2(0.38682, 0.37985), 0.0, isect);
lineIntersect(ray, vec2(0.38543, 0.38197), vec2(0.41457, 0.40136), 0.0, isect);
lineIntersect(ray, vec2(0.40441, 0.39806), vec2(0.39559, 0.43194), 0.0, isect);
lineIntersect(ray, vec2(0.40960, 0.42370), vec2(0.39040, 0.45296), 0.0, isect);
lineIntersect(ray, vec2(0.38621, 0.45089), vec2(0.41379, 0.47245), 0.0, isect);
lineIntersect(ray, vec2(0.40210, 0.46763), vec2(0.39790, 0.50237), 0.0, isect);
lineIntersect(ray, vec2(0.40514, 0.49161), vec2(0.39486, 0.52506), 0.0, isect);
lineIntersect(ray, vec2(0.40672, 0.51551), vec2(0.39328, 0.54783), 0.0, isect);
lineIntersect(ray, vec2(0.41242, 0.54267), vec2(0.38758, 0.56733), 0.0, isect);
lineIntersect(ray, vec2(0.38959, 0.56427), vec2(0.41041, 0.59240), 0.0, isect);
lineIntersect(ray, vec2(0.39065, 0.58687), vec2(0.40935, 0.61646), 0.0, isect);
lineIntersect(ray, vec2(0.40857, 0.60974), vec2(0.39143, 0.64026), 0.0, isect);
lineIntersect(ray, vec2(0.39153, 0.63302), vec2(0.40847, 0.66365), 0.0, isect);
lineIntersect(ray, vec2(0.40694, 0.65560), vec2(0.39306, 0.68773), 0.0, isect);
lineIntersect(ray, vec2(0.41005, 0.68068), vec2(0.38995, 0.70932), 0.0, isect);
lineIntersect(ray, vec2(0.38560, 0.70839), vec2(0.41440, 0.72828), 0.0, isect);
lineIntersect(ray, vec2(0.39387, 0.72528), vec2(0.40613, 0.75806), 0.0, isect);
lineIntersect(ray, vec2(0.41049, 0.75099), vec2(0.38951, 0.77901), 0.0, isect);
lineIntersect(ray, vec2(0.40304, 0.77110), vec2(0.39696, 0.80557), 0.0, isect);
lineIntersect(ray, vec2(0.38826, 0.79869), vec2(0.41174, 0.82465), 0.0, isect);
lineIntersect(ray, vec2(0.40366, 0.81789), vec2(0.39634, 0.85211), 0.0, isect);
lineIntersect(ray, vec2(0.40078, 0.84085), vec2(0.39922, 0.87582), 0.0, isect);
lineIntersect(ray, vec2(0.40053, 0.86417), vec2(0.39947, 0.89916), 0.0, isect);

    // Second hidden wall
    circleIntersect(ray, vec2(1.2, 0.7), 0.05, 0.0, isect);
    circleIntersect(ray, vec2(1.2, 0.3), 0.05, 0.0, isect);

    // Occluder
    bboxIntersect(ray, vec2(1.2, 0.0), vec2(0.1, 0.05), 5.0, isect);
}

vec2 sample(inout vec4 state, Intersection isect, float lambda, vec2 wiLocal, inout vec3 throughput, out float tMult) {
    tMult = 1.0;
    if (isect.mat == 5.0) {
        // Bounding box
        throughput = vec3(0.0);
        return sampleDiffuse(state, wiLocal);
    } else if (isect.mat == 1.0) {
        // Relay wall
        throughput *= vec3(0.5);
        return sampleDiffuse(state, wiLocal);
    } else {
        throughput *= vec3(0.5);
        return sampleDiffuse(state, wiLocal);
    }
}
