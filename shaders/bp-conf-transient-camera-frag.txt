#include "preamble"

uniform float tmax;

uniform sampler2D fluence; // x time, y spad

uniform float numSpads;
uniform float instant;
uniform vec2 laserPos;
uniform vec2 spadPos;
uniform sampler2D wallGrid; // laser and spad grid

uniform sampler2D planeGrid; // Plane to reconstruct
        // positions of the considered pixels, on a row

varying vec2 mPos; // Pixel coordinates [0,1]

void main() {
    vec2 pixelPos = texture2D(planeGrid, vec2(mPos.x, 1.0 - fract(mPos.y * numSpads))).xy;
    vec2 wallPos = texture2D(wallGrid, vec2(mPos.y, 0.5)).xy;
    
    float dlp = distance(wallPos, laserPos); // distance laser device to captured (illuminated) point
    float dsp = distance(wallPos, spadPos); // distance spad device to captured point
    float ds  = distance(wallPos, pixelPos); // distance captured (illuminated) point to reconstructed point
    float dt = ds + dsp + dlp + instant;

    float t = dt / tmax;
    gl_FragColor = texture2D(fluence, vec2(t, mPos.y));
}
