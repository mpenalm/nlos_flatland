#include "trace-frag"

#include "bsdf"
#include "intersect"

void intersect(Ray ray, inout Intersection isect) {
    bboxIntersect(ray, vec2(0.0), vec2(1.79, 1.0), 5.0, isect);
    lineIntersect(ray, vec2(1.2, -1.0), vec2(1.2, -0.2), 1.0, isect);

    // First hidden wall
lineIntersect(ray, vec2(0.41456, 0.09635), vec2(0.38544, 0.13699), 0.0, isect);
lineIntersect(ray, vec2(0.37865, 0.13699), vec2(0.42135, 0.16301), 0.0, isect);
lineIntersect(ray, vec2(0.41824, 0.16624), vec2(0.38176, 0.20042), 0.0, isect);
lineIntersect(ray, vec2(0.39277, 0.19274), vec2(0.40723, 0.24060), 0.0, isect);
lineIntersect(ray, vec2(0.37987, 0.23517), vec2(0.42013, 0.26483), 0.0, isect);
lineIntersect(ray, vec2(0.40860, 0.25986), vec2(0.39140, 0.30681), 0.0, isect);
lineIntersect(ray, vec2(0.42041, 0.30223), vec2(0.37959, 0.33110), 0.0, isect);
lineIntersect(ray, vec2(0.41387, 0.32920), vec2(0.38613, 0.37080), 0.0, isect);
lineIntersect(ray, vec2(0.42061, 0.36919), vec2(0.37939, 0.39748), 0.0, isect);
lineIntersect(ray, vec2(0.38573, 0.39614), vec2(0.41427, 0.43719), 0.0, isect);
lineIntersect(ray, vec2(0.38646, 0.42899), vec2(0.41354, 0.47101), 0.0, isect);
lineIntersect(ray, vec2(0.38839, 0.46119), vec2(0.41161, 0.50547), 0.0, isect);
lineIntersect(ray, vec2(0.41958, 0.50112), vec2(0.38042, 0.53221), 0.0, isect);
lineIntersect(ray, vec2(0.42091, 0.53630), vec2(0.37909, 0.56370), 0.0, isect);
lineIntersect(ray, vec2(0.41772, 0.56570), vec2(0.38228, 0.60097), 0.0, isect);
lineIntersect(ray, vec2(0.41200, 0.59474), vec2(0.38800, 0.63860), 0.0, isect);
lineIntersect(ray, vec2(0.39590, 0.62534), vec2(0.40410, 0.67466), 0.0, isect);
lineIntersect(ray, vec2(0.40604, 0.65907), vec2(0.39396, 0.70759), 0.0, isect);
lineIntersect(ray, vec2(0.38867, 0.69438), vec2(0.41133, 0.73895), 0.0, isect);
lineIntersect(ray, vec2(0.39663, 0.72523), vec2(0.40337, 0.77477), 0.0, isect);
lineIntersect(ray, vec2(0.38111, 0.76696), vec2(0.41889, 0.79971), 0.0, isect);
lineIntersect(ray, vec2(0.38039, 0.80117), vec2(0.41961, 0.83217), 0.0, isect);
lineIntersect(ray, vec2(0.40974, 0.82697), vec2(0.39026, 0.87303), 0.0, isect);
lineIntersect(ray, vec2(0.41927, 0.86741), vec2(0.38073, 0.89926), 0.0, isect);

    // Second hidden wall
    circleIntersect(ray, vec2(1.2, 0.7), 0.1, 0.0, isect);
    circleIntersect(ray, vec2(1.2, 0.3), 0.1, 0.0, isect);

    // Occluder
    bboxIntersect(ray, vec2(1.2, 0.0), vec2(0.1, 0.05), 5.0, isect);
}

vec2 sample(inout vec4 state, Intersection isect, float lambda, vec2 wiLocal, inout vec3 throughput, out float tMult) {
    tMult = 1.0;
    if (isect.mat == 5.0) {
        // Bounding box
        throughput = vec3(0.0);
        return sampleDiffuse(state, wiLocal);
    } else if (isect.mat == 1.0) {
        // Relay wall
        throughput *= vec3(0.5);
        return sampleDiffuse(state, wiLocal);
    } else {
        throughput *= vec3(0.5);
        return sampleDiffuse(state, wiLocal);
    }
}
