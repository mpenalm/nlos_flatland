#include "trace-frag"

#include "bsdf"
#include "intersect"

void intersect(Ray ray, inout Intersection isect) {
    bboxIntersect(ray, vec2(0.0), vec2(1.79, 1.0), 0.0, isect);
    lineIntersect(ray, vec2(1.2, -1.0), vec2(1.2, 1.0), 1.0, isect);
    lineIntersect(ray, vec2(0.5499999999999999, 0.4), vec2(0.6, 0.38), 1.0, isect);
    lineIntersect(ray, vec2(0.6, 0.38), vec2(0.6599999999999999, 0.3), 1.0, isect);
    lineIntersect(ray, vec2(0.6599999999999999, 0.3), vec2(0.69, 0.24), 1.0, isect);
    lineIntersect(ray, vec2(0.69, 0.24), vec2(0.75, 0.24), 1.0, isect);
    lineIntersect(ray, vec2(0.75, 0.24), vec2(0.7999999999999999, 0.22), 1.0, isect);
    lineIntersect(ray, vec2(0.7999999999999999, 0.22), vec2(0.82, 0.2), 1.0, isect);
    lineIntersect(ray, vec2(0.82, 0.2), vec2(0.85, 0.16), 1.0, isect);
    lineIntersect(ray, vec2(0.85, 0.16), vec2(0.8699999999999999, 0.125), 1.0, isect);
    lineIntersect(ray, vec2(0.8699999999999999, 0.125), vec2(0.875, 0.1), 1.0, isect);
    lineIntersect(ray, vec2(0.875, 0.1), vec2(0.8699999999999999, 0.08), 1.0, isect);
    lineIntersect(ray, vec2(0.8699999999999999, 0.08), vec2(0.8799999999999999, 0.06), 1.0, isect);
    lineIntersect(ray, vec2(0.8799999999999999, 0.06), vec2(0.8699999999999999, 0.04), 1.0, isect);
    lineIntersect(ray, vec2(0.8699999999999999, 0.04), vec2(0.8599999999999999, 0.02), 1.0, isect);
    lineIntersect(ray, vec2(0.8599999999999999, 0.02), vec2(0.84, 0.0), 1.0, isect);
    lineIntersect(ray, vec2(0.84, 0.0), vec2(0.61, 0.08), 1.0, isect);
    lineIntersect(ray, vec2(0.61, 0.08), vec2(0.61, 0.1), 1.0, isect);
    lineIntersect(ray, vec2(0.61, 0.1), vec2(0.615, 0.15), 1.0, isect);
    lineIntersect(ray, vec2(0.615, 0.15), vec2(0.605, 0.165), 1.0, isect);
    lineIntersect(ray, vec2(0.605, 0.165), vec2(0.48, 0.2), 1.0, isect);
    lineIntersect(ray, vec2(0.48, 0.2), vec2(0.3999999999999999, 0.25), 1.0, isect);
    lineIntersect(ray, vec2(0.3999999999999999, 0.25), vec2(0.38, 0.32), 1.0, isect);
    lineIntersect(ray, vec2(0.38, 0.32), vec2(0.3899999999999999, 0.36), 1.0, isect);
    lineIntersect(ray, vec2(0.3899999999999999, 0.36), vec2(0.4099999999999999, 0.37), 1.0, isect);
    lineIntersect(ray, vec2(0.4099999999999999, 0.37), vec2(0.49, 0.32), 1.0, isect);
    lineIntersect(ray, vec2(0.49, 0.32), vec2(0.5499999999999999, 0.3), 1.0, isect);
    lineIntersect(ray, vec2(0.5499999999999999, 0.3), vec2(0.5299999999999999, 0.32), 1.0, isect);
    lineIntersect(ray, vec2(0.5299999999999999, 0.32), vec2(0.5199999999999999, 0.35), 1.0, isect);
    lineIntersect(ray, vec2(0.5199999999999999, 0.35), vec2(0.5299999999999999, 0.39), 1.0, isect);
    lineIntersect(ray, vec2(0.5299999999999999, 0.39), vec2(0.5499999999999999, 0.4), 1.0, isect);
}

vec2 sample(inout vec4 state, Intersection isect, float lambda, vec2 wiLocal, inout vec3 throughput, out float tMult) {
    tMult = 1.0;
    if (isect.mat == 0.0) {
        throughput *= vec3(0.0);
        return sampleDiffuse(state, wiLocal);
    } else {
        throughput *= vec3(0.5);
        return sampleDiffuse(state, wiLocal);
    }
}
